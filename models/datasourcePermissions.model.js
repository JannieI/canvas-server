// Model for datasourcePermissions collection

// Imports
const mongoose = require('mongoose');
const Schema = mongoose.Schema;
const counterModel = require('./counters')

// Schema
const DatasourcePermissionSchema = new Schema({
    id: Number,                             // Unique ID
    datasourceID: Number,                   // FK to DS
    name: String,                           // Optional DS name - filled in @Runtime
    userID: String,                         // 1 of usr/grp filled in, one blank
    groupID: Number,                        // Granted to Group ID
    groupName: String,                      // Optional Group name - filled in @Runtime
    canView: Boolean,                       // Can view a DS
    canEdit: Boolean,                       // Can Edit a DS, ie do a transformation
    canDelete: Boolean,                     // Can Delete a DS (Definition, not the Data)
    canRefresh: Boolean,                    // Can Refresh a DS (Data, not Definition)
    canGrant: Boolean,                      // Can Grant access to a DS (Data, not Definition)

    // Generated by the system
    editedBy: String,                       // Last user who edited this task
    editedOn: Date,                         // Date this task was last edited
    createdBy: String,                      // UserID who created this task, can be System
    createdOn: {                            // Date task was created
        type: Date,
        // `Date.now()` returns the current unix timestamp as a Number,        default: Date.now
    }

});

// This pre-hook is called before the information is saved into the database
DatasourcePermissionSchema.pre('save', function(next) {
    var doc = this;

    // Find in the counters collection, increment and update
    counterModel.findOneAndUpdate(
        {_id: 'datasourcePermissions.id'},
        {$inc: { seq: 1} },
        { upsert: true, new: true },
        function(error, counter)   {
            if(error) {
                return next(error);
            };

            doc.id = counter.seq;
            next();
        }
    );
});

// Create Model: modelName, schema, collection
const DatasourcePermissionModel = mongoose.model('datasourcePermissions', DatasourcePermissionSchema, 'datasourcePermissions');

// Export
module.exports = DatasourcePermissionModel;