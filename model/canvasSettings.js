// Model for canvasSettings collection

// Imports
const mongoose = require('mongoose');
const Schema = mongoose.Schema;
// const counterModel = require('./counters')

// Schema
const CanvasSettingSchema = new Schema({
    _id: String,                           // Mongo ID (read only)
    id: Number,                             // Unique record ID (for consistency)
    companyName: String,                    // Company Name
    companyLogo: String,                    // Optional file name for Company logo
    dashboardTemplate: String,              // Default Dashboard Template (later use)
    maxTableLength: Number,                 // Max Table Length (say 500 records)
    widgetsMinZindex: Number,               // Widgets Min Zindex
    widgetsMaxZindex: Number,               // Widgets Max Zindex
    gridSize: Number,                       // Size of the Grid
    snapToGrid: Boolean,                    // Snap to grid (T/F)
    printDefault: String,                   // Deflt: Local HP
    printSize: String,                      // Deflt Page Size: A4
    printLayout: String,                    // Deflt Layout: Single page, B and W

    // System-wide Messages
    notInEditModeMsg: String,               // Not-In-EditMode Message to display on StatusBar
    noQueryRunningMessage: String,          // No-Query-Running Message to display on StatusBar
    queryRunningMessage: String,            // Query-Running Message to display on StatusBar
    cleanCacheOnLogin: Boolean,             // True to clean cache at login
    cleanCacheOnLogout: Boolean,            // True to clean cache at logout

    // Generated by the system
    editedBy: String,                       // Last user who edited this task
    editedOn: Date,                         // Date this task was last edited
    createdBy: String,                      // UserID who created this task, can be System
    createdOn: {                            // Date task was created
        type: Date,
        // `Date.now()` returns the current unix timestamp as a Number,        default: Date.now
    }
});

// TODO - When sure not needed, delete this
// This pre-hook is called before the information is saved into the database
// CanvasSettingSchema.pre('save', function(next) {
//     var doc = this;
    // Find in the counters collection, increment and update
    // counterModel.findOneAndUpdate(
    //     {_id: 'canvasSettings.id'},
    //     {$inc: { seq: 1} },
    //     { upsert: true, new: true },
    //     function(error, counter)   {
    //         if(error) {
    //             return next(error);
    //         };
    //         doc.id = counter.seq;
    //         next();
    //     }
    // );
// });

// Create Model: modelName, schema, collection
const CanvasSettingModel = mongoose.model('canvasSettings', CanvasSettingSchema, 'canvasSettings');

// Export
module.exports = CanvasSettingModel;